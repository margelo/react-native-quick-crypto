///
/// HybridEcKeyPairSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridEcKeyPairSpec.hpp"

namespace margelo::nitro::crypto {

  void HybridEcKeyPairSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridMethod("generateKeyPair", &HybridEcKeyPairSpec::generateKeyPair);
      prototype.registerHybridMethod("generateKeyPairSync", &HybridEcKeyPairSpec::generateKeyPairSync);
      prototype.registerHybridMethod("importKey", &HybridEcKeyPairSpec::importKey);
      prototype.registerHybridMethod("exportKey", &HybridEcKeyPairSpec::exportKey);
      prototype.registerHybridMethod("getPublicKey", &HybridEcKeyPairSpec::getPublicKey);
      prototype.registerHybridMethod("getPrivateKey", &HybridEcKeyPairSpec::getPrivateKey);
      prototype.registerHybridMethod("setCurve", &HybridEcKeyPairSpec::setCurve);
      prototype.registerHybridMethod("sign", &HybridEcKeyPairSpec::sign);
      prototype.registerHybridMethod("verify", &HybridEcKeyPairSpec::verify);
    });
  }

} // namespace margelo::nitro::crypto
