///
/// HybridCipherSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridCipherSpec.hpp"

namespace margelo::nitro::crypto {

  void HybridCipherSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridGetter("final", &HybridCipherSpec::getFinal);
      prototype.registerHybridSetter("final", &HybridCipherSpec::setFinal);
      prototype.registerHybridGetter("copy", &HybridCipherSpec::getCopy);
      prototype.registerHybridSetter("copy", &HybridCipherSpec::setCopy);
      prototype.registerHybridGetter("setArgs", &HybridCipherSpec::getSetArgs);
      prototype.registerHybridSetter("setArgs", &HybridCipherSpec::setSetArgs);
      prototype.registerHybridGetter("setAAD", &HybridCipherSpec::getSetAAD);
      prototype.registerHybridSetter("setAAD", &HybridCipherSpec::setSetAAD);
      prototype.registerHybridGetter("setAutoPadding", &HybridCipherSpec::getSetAutoPadding);
      prototype.registerHybridSetter("setAutoPadding", &HybridCipherSpec::setSetAutoPadding);
      prototype.registerHybridGetter("setAuthTag", &HybridCipherSpec::getSetAuthTag);
      prototype.registerHybridSetter("setAuthTag", &HybridCipherSpec::setSetAuthTag);
      prototype.registerHybridGetter("getAuthTag", &HybridCipherSpec::getGetAuthTag);
      prototype.registerHybridSetter("getAuthTag", &HybridCipherSpec::setGetAuthTag);
      prototype.registerHybridMethod("update", &HybridCipherSpec::update);
    });
  }

} // namespace margelo::nitro::crypto
