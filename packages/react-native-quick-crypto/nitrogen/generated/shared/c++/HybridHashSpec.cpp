///
/// HybridHashSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridHashSpec.hpp"

namespace margelo::nitro::crypto {

  void HybridHashSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridMethod("createHash", &HybridHashSpec::createHash);
      prototype.registerHybridMethod("update", &HybridHashSpec::update);
      prototype.registerHybridMethod("digest", &HybridHashSpec::digest);
      prototype.registerHybridMethod("copy", &HybridHashSpec::copy);
      prototype.registerHybridMethod("getSupportedHashAlgorithms", &HybridHashSpec::getSupportedHashAlgorithms);
      prototype.registerHybridMethod("getOpenSSLVersion", &HybridHashSpec::getOpenSSLVersion);
      prototype.registerHybridMethod("keccak256", &HybridHashSpec::keccak256);
    });
  }

} // namespace margelo::nitro::crypto
