///
/// HybridKeyObjectHandleSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#include "HybridKeyObjectHandleSpec.hpp"

namespace margelo::nitro::crypto {

  void HybridKeyObjectHandleSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridMethod("exportKey", &HybridKeyObjectHandleSpec::exportKey);
      prototype.registerHybridMethod("exportJwk", &HybridKeyObjectHandleSpec::exportJwk);
      prototype.registerHybridMethod("getAsymmetricKeyType", &HybridKeyObjectHandleSpec::getAsymmetricKeyType);
      prototype.registerHybridMethod("init", &HybridKeyObjectHandleSpec::init);
      prototype.registerHybridMethod("initECRaw", &HybridKeyObjectHandleSpec::initECRaw);
      prototype.registerHybridMethod("initJwk", &HybridKeyObjectHandleSpec::initJwk);
      prototype.registerHybridMethod("keyDetail", &HybridKeyObjectHandleSpec::keyDetail);
    });
  }

} // namespace margelo::nitro::crypto
