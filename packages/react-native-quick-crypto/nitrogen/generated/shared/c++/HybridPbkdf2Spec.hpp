///
/// HybridPbkdf2Spec.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#if __has_include(<NitroModules/HybridObject.hpp>)
#include <NitroModules/HybridObject.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif

// Forward declaration of `ArrayBuffer` to properly resolve imports.
namespace NitroModules { class ArrayBuffer; }

#include <functional>
#include <future>
#include <NitroModules/ArrayBuffer.hpp>
#include <string>

namespace margelo::nitro::crypto {

  using namespace margelo::nitro;

  /**
   * An abstract base class for `Pbkdf2`
   * Inherit this class to create instances of `HybridPbkdf2Spec` in C++.
   * @example
   * ```cpp
   * class HybridPbkdf2: public HybridPbkdf2Spec {
   *   // ...
   * };
   * ```
   */
  class HybridPbkdf2Spec: public virtual HybridObject {
    public:
      // Constructor
      explicit HybridPbkdf2Spec(): HybridObject(TAG) { }

      // Destructor
      virtual ~HybridPbkdf2Spec() { }

    public:
      // Properties
      virtual std::function<std::future<std::future<std::shared_ptr<ArrayBuffer>>>(const std::shared_ptr<ArrayBuffer>& /* password */, const std::shared_ptr<ArrayBuffer>& /* salt */, double /* iterations */, double /* keylen */, const std::string& /* digest */)> getPbkdf2() = 0;
      virtual void setPbkdf2(const std::function<std::future<std::future<std::shared_ptr<ArrayBuffer>>>(const std::shared_ptr<ArrayBuffer>& /* password */, const std::shared_ptr<ArrayBuffer>& /* salt */, double /* iterations */, double /* keylen */, const std::string& /* digest */)>& pbkdf2) = 0;
      virtual std::function<std::future<std::shared_ptr<ArrayBuffer>>(const std::shared_ptr<ArrayBuffer>& /* password */, const std::shared_ptr<ArrayBuffer>& /* salt */, double /* iterations */, double /* keylen */, const std::string& /* digest */)> getPbkdf2Sync() = 0;
      virtual void setPbkdf2Sync(const std::function<std::future<std::shared_ptr<ArrayBuffer>>(const std::shared_ptr<ArrayBuffer>& /* password */, const std::shared_ptr<ArrayBuffer>& /* salt */, double /* iterations */, double /* keylen */, const std::string& /* digest */)>& pbkdf2Sync) = 0;

    public:
      // Methods
      

    protected:
      // Hybrid Setup
      void loadHybridMethods() override;

    protected:
      // Tag for logging
      static constexpr auto TAG = "Pbkdf2";
  };

} // namespace margelo::nitro::crypto
